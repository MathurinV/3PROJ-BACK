networks:
  default:
  local:

services:
  api:
    image: api
    build:
      context: .
      dockerfile: API/Dockerfile
    environment:
      # DATABASE
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_PORT: ${DB_PORT}
      
      # API
      API_ENDPOINT: ${API_ENDPOINT}
      JWT_SECRET: ${JWT_SECRET}
      API_PORT: ${API_PORT}
      
      # GOOGLE_AUTHENTICATION
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      
      # FTP
      FTP_USER: ${FTP_USER}
      FTP_PASS: ${FTP_PASS}
      PASV_ADDRESS: ${PASV_ADDRESS}
      
      # CLIENT
      CLIENT_URL: ${CLIENT_URL}
    
    networks:
      - default
      - local
    ports:
      - "${API_PORT}:8080"
    depends_on:
      - db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
  
  db:
    image: postgres:alpine
    volumes:
      - /var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - local
    #  dev only:
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 30s
      timeout: 10s
      retries: 5
  
  cache:
    image: redis:alpine
    networks:
      - local
    ports:
      - "${CACHE_PORT}:6379"
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
  
  ftp:
    image: fauria/vsftpd
    ports:
      - "20:20"
      - "21:21"
      - "21100-21110:21100-21110"
    environment:
      FTP_USER: ${FTP_USER}
      FTP_PASS: ${FTP_PASS}
      PASV_ADDRESS: ${PASV_ADDRESS}
      PASV_MIN_PORT: 21100
      PASV_MAX_PORT: 21110
    volumes:
      - ftpdata:/home/vsftpd
    networks:
      - local
    restart: always

    

volumes:
  ftpdata: